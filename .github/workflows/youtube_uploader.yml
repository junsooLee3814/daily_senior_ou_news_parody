name: YouTube Upload (Senior OU News Parody)

on:
  schedule:
    - cron: '30 22 * * *'  # 매일 오전 7:30 KST
  workflow_dispatch:

jobs:
  upload_to_youtube:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository (with LFS)
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Git LFS pull
        run: |
          git lfs install
          git lfs pull

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        working-directory: ./youtube_uploader
        run: pip install -r requirements_youtube.txt

      - name: Install additional dependencies
        run: |
          pip install google-auth-oauthlib
          pip install google-auth-httplib2
          pip install google-api-python-client

      - name: Restore YouTube authentication files
        run: |
          mkdir -p youtube_uploader
          echo "${{ secrets.YOUTUBE_CLIENT_SECRETS }}" > youtube_uploader/client_secrets.json
          echo "${{ secrets.YOUTUBE_TOKEN_JSON }}" > youtube_uploader/token.json

      - name: Restore Google Sheets authentication file
        run: |
          echo "${{ secrets.GOOGLE_CREDENTIALS_JSON }}" > service_account.json

      - name: Auto-refresh YouTube token if needed
        run: |
          echo "=== 토큰 자동 새로고침 시도 ==="
          python -c "import os; import json; from google.oauth2.credentials import Credentials; from google.auth.transport.requests import Request; creds = Credentials.from_authorized_user_file('youtube_uploader/token.json', ['https://www.googleapis.com/auth/youtube.upload', 'https://www.googleapis.com/auth/youtube.readonly']); print('토큰 만료 여부:', creds.expired); print('리프레시 토큰 존재:', bool(creds.refresh_token)); print('권한 범위:', creds.scopes)"

      - name: Install FFmpeg
        run: sudo apt-get update && sudo apt-get install -y ffmpeg

      - name: Debug - Check video files
        run: |
          echo "=== 업로드할 비디오 파일 확인 ==="
          ls -la parody_video/
          if [ -d "parody_video" ]; then
            find parody_video -name "*.mp4" -type f
            echo "=== 파일 크기 확인 ==="
            for file in parody_video/*.mp4; do
              if [ -f "$file" ]; then
                size=$(du -h "$file" | cut -f1)
                echo "$(basename "$file"): $size"
              fi
            done
          else
            echo "parody_video 디렉토리가 없습니다."
          fi

      - name: Debug - Check token scopes
        run: |
          echo "=== 토큰 권한 범위 확인 ==="
          python -c "import json; token_data = json.load(open('youtube_uploader/token.json')); print('토큰 권한 범위:', token_data.get('scopes', '없음')); print('토큰 만료일:', token_data.get('expiry', '없음'))"

      - name: Upload to YouTube
        run: python youtube_uploader/upload_to_youtube.py
        env:
          PYTHONUNBUFFERED: 1