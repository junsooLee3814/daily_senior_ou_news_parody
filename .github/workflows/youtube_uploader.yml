name: YouTube Upload (Senior OU News Parody)

on:
  schedule:
      # 매일 오전 7:30 KST (전날 22:30 UTC)에 실행
    - cron: '30 22 * * *'
  workflow_dispatch:

jobs:
  upload_to_youtube:
    runs-on: ubuntu-latest
    env:
      GSHEET_ID: ${{ secrets.GSHEET_ID }}
      GOOGLE_CREDENTIALS_JSON: ${{ secrets.GOOGLE_CREDENTIALS_JSON }}
      YOUTUBE_CLIENT_SECRETS: ${{ secrets.YOUTUBE_CLIENT_SECRETS }}
      YOUTUBE_TOKEN_JSON: ${{ secrets.YOUTUBE_TOKEN_JSON }}
      CLAUDE_API_KEY: ${{ secrets.CLAUDE_API_KEY }}
    steps:
      - name: 📥 Checkout repository with LFS
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: 📦 Install dependencies
        run: pip install -r youtube_uploader/requirements_youtube.txt

      - name: 🔐 Restore authentication files
        run: |
          mkdir -p youtube_uploader
          printf "%s" '${{ secrets.YOUTUBE_CLIENT_SECRETS }}' > youtube_uploader/client_secrets.json
          printf "%s" '${{ secrets.YOUTUBE_TOKEN_JSON }}' > youtube_uploader/token.json
          printf "%s" '${{ secrets.GOOGLE_CREDENTIALS_JSON }}' > service_account.json
          
          # JSON 파일 검증
          echo "🔍 JSON 파일 검증 중..."
          python -c "import json; json.load(open('service_account.json')); print('✅ service_account.json 유효함')"
          python -c "import json; json.load(open('youtube_uploader/token.json')); print('✅ token.json 유효함')"
          python -c "import json; json.load(open('youtube_uploader/client_secrets.json')); print('✅ client_secrets.json 유효함')"

      - name: 🚀 Upload to YouTube
        run: python youtube_uploader/upload_to_youtube.py

      - name: 🧹 Clean up LFS storage
        run: |
          echo "🧹 Git LFS 저장 공간 정리 중..."
          git lfs prune --force
          echo "✅ LFS 정리 완료"