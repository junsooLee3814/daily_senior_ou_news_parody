name: YouTube Upload (Senior OU News Parody)

on:
  schedule:
    - cron: '30 22 * * *'  # 매일 오전 7:30 KST
  workflow_dispatch:

jobs:
  upload_to_youtube:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repository with LFS
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: 📦 Install YouTube uploader dependencies
        working-directory: ./youtube_uploader
        run: pip install -r requirements_youtube.txt

      - name: 🔐 Restore authentication files
        run: |
          mkdir -p youtube_uploader
          echo "${{ secrets.YOUTUBE_CLIENT_SECRETS }}" > youtube_uploader/client_secrets.json
          printf "%s" '${{ secrets.YOUTUBE_TOKEN_JSON }}' > youtube_uploader/token.json
          echo "${{ secrets.GOOGLE_CREDENTIALS_JSON }}" > service_account.json

      - name: 👀 Verify token.json content
        run: cat youtube_uploader/token.json

      - name: 🚀 Upload to YouTube
        run: python youtube_uploader/upload_to_youtube.py

      - name: 🧹 Clean up old video files
        run: |
          echo "🧹 오래된 동영상 파일 정리 중..."
          cd parody_video
          
          # 최신 파일 찾기
          latest_file=$(ls -t *.mp4 2>/dev/null | head -1)
          
          if [ -n "$latest_file" ]; then
            echo "📹 최신 파일: $latest_file"
            
            # 최신 파일을 제외한 모든 .mp4 파일 삭제
            for file in *.mp4; do
              if [ "$file" != "$latest_file" ] && [ -f "$file" ]; then
                echo "🗑️ 삭제: $file"
                rm "$file"
              fi
            done
            
            echo "✅ 파일 정리 완료"
          else
            echo "⚠️ 삭제할 .mp4 파일이 없습니다"
          fi

      - name: 🧹 Clean up LFS files from Git history
        run: |
          echo "🧹 Git LFS 히스토리에서 오래된 파일 제거 중..."
          
          # 현재 parody_video 폴더의 파일들 확인
          current_files=$(ls parody_video/*.mp4 2>/dev/null | xargs -n1 basename 2>/dev/null || echo "")
          echo "📁 현재 파일들: $current_files"
          
          # LFS로 추적되는 파일들 확인
          lfs_files=$(git lfs ls-files | grep "parody_video" | awk '{print $3}' | xargs -n1 basename 2>/dev/null || echo "")
          echo "🔗 LFS 추적 파일들: $lfs_files"
          
          # LFS에서 추적 중이지만 현재 존재하지 않는 파일들 찾기
          for lfs_file in $lfs_files; do
            if [ -n "$lfs_file" ] && ! echo "$current_files" | grep -q "$lfs_file"; then
              echo "🗑️ LFS에서 제거: parody_video/$lfs_file"
              git lfs untrack "parody_video/$lfs_file" 2>/dev/null || true
              git rm --cached "parody_video/$lfs_file" 2>/dev/null || true
            fi
          done
          
          echo "✅ LFS 정리 완료"

      - name: 📊 Show remaining files
        run: |
          echo "📁 parody_video 폴더 남은 파일:"
          ls -la parody_video/ || echo "폴더가 없습니다"
          
          echo "🔗 LFS 추적 파일들:"
          git lfs ls-files | grep "parody_video" || echo "LFS 파일 없음"