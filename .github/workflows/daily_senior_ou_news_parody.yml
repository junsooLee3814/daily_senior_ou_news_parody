name: Senior OU News Parody Video Generation

on:
  schedule:
    # ÎèôÏòÅÏÉÅ ÏÉùÏÑ±(23:30 UTC)Ïù¥ ÎÅùÎÇú ÌõÑ Ïã§ÌñâÎêòÎèÑÎ°ù ÏãúÍ∞Ñ Ï°∞Ï†ï
    # Îß§Ïùº Ïò§Ï†Ñ 9:30 KST (ÎãπÏùº 00:30 UTC)Ïóê Ïã§Ìñâ
    - cron: '30 0 * * *'
  workflow_dispatch:

jobs:
  generate_parody_video:
    runs-on: ubuntu-latest
    steps:
      - name: üì• R√©cup√©ration du code (LFS inclus)
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: üêç Configuration de l'environnement Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11' # Correspond √† la version test√©e en local

      - name: üé¨ Installation de FFmpeg (pour la cr√©ation vid√©o)
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg

      - name: üêç Installation des paquets Python
        run: pip install -r requirements.txt

      - name: üîë Cr√©ation du fichier d'informations d'identification Google
        env:
          GOOGLE_CREDENTIALS_JSON: ${{ secrets.GOOGLE_CREDENTIALS_JSON }}
        run: echo "$GOOGLE_CREDENTIALS_JSON" > service_account.json

      - name: üéØ Ex√©cution de la g√©n√©ration de la vid√©o parodique Senior News
        env:
          CLAUDE_API_KEY: ${{ secrets.CLAUDE_API_KEY }}
        run: python step4_senior_ou_news_parody_final.py

      - name: üì§ Commit et push des fichiers g√©n√©r√©s
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Configuration du suivi des fichiers vid√©o avec Git LFS
          git lfs track "parody_video/*.mp4"
          git add .gitattributes
          
          # Ajout de la vid√©o et des images de la carte d'information g√©n√©r√©es
          git add parody_video/*.mp4
          git add parody_card/*.png
          
          # Commit et push uniquement s'il y a des modifications
          if git diff --staged --quiet; then
            echo "‚úÖ Aucune modification. Le commit est ignor√©."
          else
            echo "üöÄ Commit et push des modifications."
            git commit -m "üé¨ G√©n√©ration automatique : $(date '+%Y-%m-%d') Vid√©o parodique Senior News"
            git push
          fi 
